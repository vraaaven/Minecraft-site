/*
 * based on bootstrap 4
 */

/* container */

.container {
    width: 100%;
    margin-right: auto;
    margin-left: auto;

    @for $i from 1 through length($grid) {
        $size: nth($grid, $i);
        $bp: map-get($size, bp);
        $gutter: map-get($size, gutter);
        $width: map-get($size, container);

        @if ($i == 1) {
            padding-right: $gutter;
            padding-left: $gutter;
        } @else {
            @include breakpoint($bp) {
                max-width: $width;
                padding-right: $gutter;
                padding-left: $gutter;
            }
        }
    }
}

/* row */

.row {
    display: flex;
    flex-wrap: wrap;

    @for $i from 1 through length($grid) {
        $size: nth($grid, $i);
        $bp: map-get($size, bp);
        $gutter: map-get($size, gutter);

        @if ($i == 1) {
            margin-right: -$gutter;
            margin-left: -$gutter;
        } @else {
            @include breakpoint($bp) {
                margin-right: -$gutter;
                margin-left: -$gutter;
            }
        }
    }
}

.no-gutters {
    margin-right: 0;
    margin-left: 0;

    > .col,
    > [class*="col-"] {
        padding-right: 0;
        padding-left: 0;
    }
}

/* col */

%col {
    position: relative;
    width: 100%;
    min-height: 1px;

    @for $i from 1 through length($grid) {
        $size: nth($grid, $i);
        $bp: map-get($size, bp);
        $gutter: map-get($size, gutter);

        @if ($i == 1) {
            padding-right: $gutter;
            padding-left: $gutter;
        } @else {
            @include breakpoint($bp) {
                padding-right: $gutter;
                padding-left: $gutter;
            }
        }
    }
}

@for $i from 1 through length($grid) {
    $size: nth($grid, $i);
    $pref: map-get($size, pref);
    $bp: map-get($size, bp);
    $gutter: map-get($size, gutter);

    // .col, .col-sm ...
    .col#{$pref} {
        @extend %col;

        @if ($i == 1) {
            max-width: 100%;
            flex-basis: 0;
            flex-grow: 1;
        } @else {
            @include breakpoint($bp) {
                max-width: 100%;
                flex-basis: 0;
                flex-grow: 1;
            }
        }
    }

    // .col-auto, .col-sm-auto ...
    .col#{$pref}-auto {
        @extend %col;

        @if ($i == 1) {
            width: auto;
            max-width: none;
            flex: 0 0 auto;
        } @else {
            @include breakpoint($bp) {
                width: auto;
                max-width: none;
                flex: 0 0 auto;
            }
        }
    }

    // .col-1, .col-2 ...
    @for $j from 1 through $collumns {
        .col#{$pref}-#{$j} {
            @extend %col;

            @if ($i == 1) {
                max-width: calc(100% / $collumns * $j);
                flex: 0 0 calc(100% / $collumns * $j);
            } @else {
                @include breakpoint($bp) {
                    max-width: calc(100% / $collumns * $j);
                    flex: 0 0 calc(100% / $collumns * $j);
                }
            }
        }
    }

    // .offset-0, .offset-1, .offset-2 ...
    .offset#{$pref}-0 {
        @if ($i == 1) {
            margin-left: 0;
        } @else {
            @include breakpoint($bp) {
                margin-left: 0;
            }
        }
    }
    @for $j from 1 through $collumns {
        .offset#{$pref}-#{$j} {
            @if ($i == 1) {
                margin-left: calc(100% / $collumns * $j);
            } @else if ($j < 12) {
                @include breakpoint($bp) {
                    margin-left: calc(100% / $collumns * $j);
                }
            }
        }
    }

    // .order-first, .order-last ...
    .order#{$pref}-first {
        @if ($i == 1) {
            order: -1;
        } @else {
            @include breakpoint($bp) {
                order: -1;
            }
        }
    }
    .order#{$pref}-last {
        @if ($i == 1) {
            order: 13;
        } @else {
            @include breakpoint($bp) {
                order: 13;
            }
        }
    }

    // .order-1, .order-2 ...
    @for $j from 0 through $collumns {
        .order#{$pref}-#{$j} {
            @if ($i == 1) {
                order: $j;
            } @else {
                @include breakpoint($bp) {
                    order: $j;
                }
            }
        }
    }
}
